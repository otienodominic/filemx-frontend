{"version":3,"sources":["reducers/auth.js","constants/actionTypes.js","reducers/index.js","reducers/posts.js","api/index.js","actions/posts.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/Home/Home.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/Auth/icon.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","actions/auth.js","App.js","index.js","images/memories.png"],"names":["authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","data","loading","errors","clear","reducers","combineReducers","posts","payload","map","post","_id","filter","auth","API","axios","create","baseURL","interceptors","request","use","req","getItem","headers","Authorization","parse","token","updatePost","id","updatedPost","patch","deletePost","delete","signIn","formData","signUp","createPost","dispatch","a","newPost","console","log","api","descendingComparator","b","orderBy","headCells","numeric","disablePadding","label","string","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","useDispatch","user","Toolbar","clsx","Typography","variant","component","Tooltip","result","googleId","creator","Button","size","fontSize","IconButton","aria-label","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","Posts","useSelector","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","target","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","patientNumber","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","patientName","phoneNumber","age","gender","moment","appointmentDate","format","viralLoad","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","form","display","flexWrap","justifyContent","fileInput","buttonSubmit","Form","currentId","setCurrentId","selectedFile","postData","setPostData","find","message","useEffect","handleSubmit","e","preventDefault","autoComplete","noValidate","onSubmit","TextField","fullWidth","Home","get","Grow","in","Container","Grid","container","justify","alignItems","item","xs","sm","appBar","borderRadius","flexDirection","heading","textDecoration","image","marginLeft","toolbar","profile","userName","brandContainer","purple","getContrastText","deepPurple","Navbar","setUser","location","useLocation","history","useHistory","logout","push","decode","exp","Date","getTime","AppBar","Link","to","src","memories","alt","Avatar","imageUrl","charAt","icon","viewBox","fill","d","marginTop","avatar","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","initialState","firstName","lastName","email","password","confirmPassword","SignUp","setForm","isSignup","setIsSignup","showPassword","setShowPassword","googleSuccess","res","profileObj","tokenId","error","maxWidth","elevation","router","signin","clientId","render","renderProps","disabled","startIcon","onSuccess","onFailure","alert","cookiePolicy","prevIsSignup","App","path","exact","Auth","store","createStore","compose","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.94dbd389.chunk.js","sourcesContent":["import * as actionType from '../constants/actionTypes';\r\n\r\nconst authReducer = (state = { authData: null }, action) => {\r\n  switch (action.type) {\r\n    case actionType.AUTH:\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\r\n\r\n      return { ...state, authData: action.data, loading: false, errors: null };\r\n    case actionType.LOGOUT:\r\n      localStorage.clear();\r\n\r\n      return { ...state, authData: null, loading: false, errors: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE = 'LIKE';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';\r\n","import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts';\r\nimport auth from './auth';\r\n\r\nexport const reducers = combineReducers({ posts, auth });\r\n","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case LIKE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    case UPDATE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n\r\n","import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'https://file-backend.herokuapp.com' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n  }\r\n\r\n  return req;\r\n});\r\n\r\nexport const fetchPosts = () => API.get('/posts');\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\n\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\nexport const signUp = (formData) => API.post('/user/signup', formData);\r\n","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  try {\r\n    const { data } = await api.likePost(id, user?.token);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n// import SearchBar from 'material-ui-search-bar';\r\nimport { Grid, CircularProgress, Button } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport { deletePost } from '../../actions/posts';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'number', numeric: false, disablePadding: true, label: 'Patient Number' },\r\n  { id: 'name', string: false, disablePadding: true, label: 'Patient Name' },\r\n  { id: 'phone', numeric: true, disablePadding: false, label: 'Phone Number' },\r\n  { id: 'age', numeric: true, disablePadding: false, label: 'Age (Years)' },\r\n  { id: 'gener', numeric: true, disablePadding: false, label: 'Gender' },\r\n  { id: 'date', numeric: true, disablePadding: false, label: 'Appointment Date' },\r\n  { id: 'batch', numeric: false, disablePadding: true, label: 'Batch Number' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all patients' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, post } = props;\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Patient List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n          <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\r\n            <DeleteIcon fontSize=\"small\" /> Delete\r\n          </Button>\r\n          )}\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Posts() {\r\n  const posts = useSelector((state) => state.posts);\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [searched, setSearched] = useState('');\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = posts.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, posts.length - page * rowsPerPage);\r\n  const user = localStorage.getItem('profile');\r\n  return (\r\n    <div className={classes.root}>\r\n      {\r\n        user ? (\r\n          <Paper className={classes.paper}>\r\n            <EnhancedTableToolbar numSelected={selected.length} />\r\n            <TableContainer>\r\n              <Table\r\n                className={classes.table}\r\n                aria-labelledby=\"tableTitle\"\r\n                size={dense ? 'small' : 'medium'}\r\n                aria-label=\"enhanced table\"\r\n              >\r\n                <EnhancedTableHead\r\n                  classes={classes}\r\n                  numSelected={selected.length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                  onRequestSort={handleRequestSort}\r\n                  rowCount={posts.length}\r\n                />\r\n                <TableBody>\r\n                  {stableSort(posts, getComparator(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((post, index) => {\r\n                      const isItemSelected = isSelected(post.patientNumber);\r\n                      const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          onClick={(event) => handleClick(event, post.patientNumber)}\r\n                          role=\"checkbox\"\r\n                          aria-checked={isItemSelected}\r\n                          tabIndex={-1}\r\n                          key={post.patientNumber}\r\n                          selected={isItemSelected}\r\n                        >\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              checked={isItemSelected}\r\n                              inputProps={{ 'aria-labelledby': labelId }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                            {post.patientNumber}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{post.patientName}</TableCell>\r\n                          <TableCell align=\"right\">{post.phoneNumber}</TableCell>\r\n                          <TableCell align=\"right\">{post.age}</TableCell>\r\n                          <TableCell align=\"right\">{post.gender}</TableCell>\r\n                          <TableCell align=\"right\">{moment(post.appointmentDate).format('MMMM Do YYYY')}</TableCell>\r\n                          <TableCell align=\"right\">{post.viralLoad}</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={posts.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n\r\n        ) : null\r\n\r\n      }\r\n\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, {useState} from 'react';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Table from \"@material-ui/core/Table\";\r\n// import TableBody from \"@material-ui/core/TableBody\";\r\n// import TableCell from \"@material-ui/core/TableCell\";\r\n// import TableContainer from \"@material-ui/core/TableContainer\";\r\n// import TableHead from \"@material-ui/core/TableHead\";\r\n// import TableRow from \"@material-ui/core/TableRow\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import SearchBar from \"material-ui-search-bar\";\r\n// import { Grid, CircularProgress } from '@material-ui/core';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// // import Post from './Post/Post';\r\n// // import useStyles from './styles';\r\n\r\n// const useStyles = makeStyles({\r\n//   table: {\r\n//     minWidth: 650\r\n//   }\r\n// });\r\n\r\n// const Posts = ({ setCurrentId }) => {\r\n//   const posts = useSelector((state) => state.posts);\r\n//   console.log(posts)\r\n//   const classes = useStyles();\r\n//   const [rows, setRows] = useState(posts);\r\n//   const [searched, setSearched] = useState(\"\");\r\n\r\n//   const requestSearch = (searchedVal) => {\r\n//     const filteredRows = posts.filter((row) => {\r\n//       return row.patientNumber.includes(searchedVal);\r\n//     });\r\n//     setRows(filteredRows);\r\n//   };\r\n\r\n//   const cancelSearch = () => {\r\n//     setSearched(\"\");\r\n//     requestSearch(searched);\r\n//   };\r\n\r\n//   return (\r\n//     !posts.length ? <CircularProgress /> : (\r\n//       <Paper>\r\n//         <SearchBar\r\n//           value={searched}\r\n//           onChange={(searchVal) => requestSearch(searchVal)}\r\n//           onCancelSearch={() => cancelSearch()}\r\n//         />\r\n//         <TableContainer>\r\n//           <Table className={classes.table} aria-label=\"simple table\">\r\n//             <TableHead>\r\n//               <TableRow>\r\n//                 <TableCell>Patient Number</TableCell>\r\n//                 <TableCell align=\"right\">Patient Name</TableCell>\r\n//                 <TableCell align=\"right\">Phone Number&nbsp;(mobile)</TableCell>\r\n//                 <TableCell align=\"right\">Age&nbsp;(Years)</TableCell>\r\n//                 <TableCell align=\"right\">Gender&nbsp;(M/F)</TableCell>\r\n//                 <TableCell align=\"right\">Appointment Date</TableCell>\r\n//                 <TableCell align=\"right\">Batch Number</TableCell>\r\n//               </TableRow>\r\n//             </TableHead>\r\n//             <TableBody>\r\n//               {rows.map((row) => (\r\n//                 <TableRow key={row.patientNumber}>\r\n//                   <TableCell component=\"th\" scope=\"row\">\r\n//                     {row.patientNumber}\r\n//                   </TableCell>\r\n//                   <TableCell align=\"right\">{row.patientName}</TableCell>\r\n//                   <TableCell align=\"right\">{row.phoneNumber}</TableCell>\r\n//                   <TableCell align=\"right\">{row.age}</TableCell>\r\n//                   <TableCell align=\"right\">{row.gender}</TableCell>\r\n//                   <TableCell align=\"right\">{row.appointmentDate}</TableCell>\r\n//                   <TableCell align=\"right\">{row.viralLoad}</TableCell>\r\n//                 </TableRow>\r\n//               ))}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </TableContainer>\r\n//       </Paper>\r\n//     )\r\n//   );\r\n// };\r\n\r\n// export default Posts;\r\n\r\n// import React from 'react';\r\n// import { Grid, CircularProgress } from '@material-ui/core';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// import Post from './Post/Post';\r\n// import useStyles from './styles';\r\n\r\n// const Posts = ({ setCurrentId }) => {\r\n//   const posts = useSelector((state) => state.posts);\r\n//   console.log(posts)\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     !posts.length ? <CircularProgress /> : (\r\n//       <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n//         {posts.map((post) => (\r\n//           <Grid key={post._id} item xs={12} sm={6} md={6}>\r\n//             <Post post={post} setCurrentId={setCurrentId} />\r\n//           </Grid>\r\n//         ))}\r\n//       </Grid>\r\n//     )\r\n//   );\r\n// };\r\n\r\n// export default Posts;\r\n","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import FileBase from 'react-file-base64';\r\n\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n\r\n  const [postData, setPostData] = useState({ patientNumber: '', patientName: '', phoneNumber: '',age: '', gender: '', viralLoad: '', selectedFile: '', appointmentDate: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({patientNumber: '', patientName: '', phoneNumber: '',age: '', gender: '', viralLoad: '', selectedFile: '', appointmentDate: ''});\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\r\n      clear();\r\n    }\r\n  };\r\n\r\n  if (!user?.result?.name) {\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Please Sign In to create your own memories and like other's memories.\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n// patientNumber, patientName, phoneNumber,age, gender, viralLoad, creator, selectedFile, appointmentDate\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.patientName}\"` : 'Register Patient'}</Typography>\r\n        <TextField name=\"patientNumber\" variant=\"outlined\" label=\"Patient Number\" fullWidth value={postData.patientNumber} onChange={(e) => setPostData({ ...postData, patientNumber: e.target.value })} />\r\n        <TextField name=\"patientName\" variant=\"outlined\" label=\"Patient Name\" fullWidth  value={postData.patientName} onChange={(e) => setPostData({ ...postData, patientName: e.target.value })} />\r\n        <TextField name=\"phoneNumber\" variant=\"outlined\" label=\"Phone Number\" fullWidth value={postData.phoneNumber} onChange={(e) => setPostData({ ...postData, phoneNumber: e.target.value })} />\r\n        <TextField name=\"age\" variant=\"outlined\" label=\"Age\" fullWidth value={postData.age} onChange={(e) => setPostData({ ...postData, age: e.target.value })} />\r\n        <TextField name=\"gender\" variant=\"outlined\" label=\"Gender\" fullWidth value={postData.gender} onChange={(e) => setPostData({ ...postData, gender: e.target.value })} />\r\n        <TextField name=\"viralLoad\" variant=\"outlined\" label=\"Batch Number\" fullWidth value={postData.viralLoad} onChange={(e) => setPostData({ ...postData, viralLoad: e.target.value })} />\r\n        <TextField name=\"appointmentDate\" type=\"date\" variant=\"outlined\" label=\"Appointment Date\" fullWidth value={postData.appointmentDate} onChange={(e) => setPostData({ ...postData, appointmentDate: e.target.value })} />\r\n        {/* <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div> */}\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { getPosts } from '../../actions/posts';\r\nimport Posts from '../Posts/Posts';\r\nimport Form from '../Form/Form';\r\n\r\nconst Home = () => {\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [currentId, dispatch]);\r\n\r\n  return (\r\n    <Grow in>\r\n      <Container>\r\n        <Grid container justify=\"space-between\"  alignItems=\"stretch\" spacing={2}>\r\n          <Grid item xs={12} sm={7}>\r\n            <Posts setCurrentId={setCurrentId} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport memories from '../../images/memories.png';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    history.push('/auth');\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <div className={classes.brandContainer}>\r\n        <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h5\" align=\"center\">File Management System</Typography>\r\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" />\r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst icon = () => (\r\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default icon;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  googleButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\r\n  <Grid item xs={12} sm={half ? 6 : 12}>\r\n    <TextField\r\n      name={name}\r\n      onChange={handleChange}\r\n      variant=\"outlined\"\r\n      required\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      type={type}\r\n      InputProps={name === 'password' ? {\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleShowPassword}>\r\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      } : null}\r\n    />\r\n  </Grid>\r\n);\r\n\r\nexport default Input;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Icon from './icon';\r\nimport { signin, signup } from '../../actions/auth';\r\nimport { AUTH } from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\r\n\r\nconst SignUp = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const switchMode = () => {\r\n    setForm(initialState);\r\n    setIsSignup((prevIsSignup) => !prevIsSignup);\r\n    setShowPassword(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isSignup) {\r\n      dispatch(signup(form, history));\r\n    } else {\r\n      dispatch(signin(form, history));\r\n    }\r\n  };\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n\r\n    try {\r\n      dispatch({ type: AUTH, data: { result, token } });\r\n\r\n      history.push('/');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            { isSignup && (\r\n            <>\r\n              <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n              <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n            </>\r\n            )}\r\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\r\n          </Grid>\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            { isSignup ? 'Sign Up' : 'Sign In' }\r\n          </Button>\r\n          <GoogleLogin\r\n            clientId=\"564033717568-e5p23rhvcs4i6kffgsbci1d64r8hp6fn.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\r\n                Google Sign In\r\n              </Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleError}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { AUTH } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const signin = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signIn(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const signup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './components/Home/Home';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Auth from './components/Auth/Auth';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <Container maxWidth=\"lg\">\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/auth\" exact component={Auth} />\r\n      </Switch>\r\n    </Container>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { reducers } from './reducers';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/memories.5c0c63fb.png\";"],"sourceRoot":""}